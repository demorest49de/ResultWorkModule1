Структурирование контента в HTML: как не перепутать &lt;div&gt;, &lt;section&gt;, &lt;article&gt; и &lt;aside&gt;?
Ещё одна причина любить и уважать HTML5 — его громадный вклад в семантику кода. То есть, код теперь имеет осмысленную и логичную структуру. Для этого введены специальные теги, которые служат удобным инструментом создания понятной и легко читаемой структуры в коде.

Среди прочих стоит выделить теги &lt;section&gt;, &lt;article&gt; и &lt;aside&gt;. Именно они делают блок с контентом более значимым и обособленным, чем привычный &lt;div&gt;. Часто не до конца ясно, когда использовать эти новые элементы, а когда обычный &lt;div&gt;. Что ж, давайте начнём с обзора упомянутых элементов, а затем уже поговорим об их применении и комбинировании.

Обзор элементов

&lt;div&gt;

Элемент &lt;div&gt; является, пожалуй, самым универсальным блочным элементом. При этом у него нет полноценного самостоятельного значения — он предназначен для группировки контента, который семантически никак не связан между собой. Использовать &lt;div&gt; нужно осторожно — он не имеет смысла для скрин ридеров.

Настоятельно рекомендуем обращаться к элементу &lt;div&gt; только в крайнем случае, когда больше никакие другие элементы не подходят!

Элемент &lt;div&gt; чаще всего используется как контейнер для других элементов

&lt;section&gt;

В отличие от &lt;div&gt;, тег &lt;section&gt; применяется к общим разделам контента, который может быть сгруппирован семантически.

Главное правило: элемент &lt;section&gt; уместно использовать только тогда, когда его содержимое явно указывается в структуре. Например, в качестве раздела.

В силу того, что содержимое тега &lt;section&gt; имеет семантическую общность — «тему» — её необходимо указать с помощью заголовка. Часто «тема» указывается сразу после открытия тега:

&lt;article&gt;

Тег &lt;article&gt; ещё более уточняющий и конкретный, чем тег &lt;section&gt;. Он так же применяется к семантически связанному блоку контента и должен иметь заголовок. Его содержимое должно быть независимым и самодостаточным — это, своего рода, отдельная статья. При изолировании содержимого тега &lt;article&gt; от остальной части страницы должны сохраняться его смысл и законченность.

Чаще всего тег &lt;article&gt; применяется к статье на сайте, отдельной новости, посту блога, сообщению форума или комментариям:

&lt;aside&gt;

Тег &lt;aside&gt; тоже применяется к блоку для семантического указания раздела. Но у него есть важное отличие от &lt;section&gt; или &lt;article&gt;: он представляет блок контента, отношение которого к содержимому документа косвенное или вообще отсутствует. Тег &lt;aside&gt; независим (буквально, в стороне) от остального контента. То есть, он может быть вырван из одной страницы и вставлен в другую и при этом не потеряет свою актуальность.

Чаще всего &lt;aside&gt; применяется для боковых панелей, блоков с рекламными баннерами, сносок и другой информации, которая отделена от основного содержимого страницы:

Применение &lt;div&gt;, &lt;section&gt;, &lt;article&gt; и &lt;aside&gt;

Принимая во внимание особенности элементов, которые мы рассмотрели выше, получаем простой алгоритм для определения нужного тега в каждой ситуации:

если контент не является семантически связанным — используется &lt;div&gt;.
если контент семантически связан и относительно независим от остального содержимого страницы — используется &lt;article&gt;.
если контент связан с содержимым всей страницы — используется &lt;section&gt;.
тег &lt;aside&gt;, как было замечено выше, используется для обособления контента, который связан по смыслу между собой, но при этом не связан (слабо связан) с остальным содержимым страницы.

Для простоты восприятия проиллюстрируем всё это графически:

Комбинирование элементов

Теперь рассмотрим ключевые особенности объединения этих элементов вместе.

&lt;article&gt; в &lt;article&gt;

Элементы &lt;article&gt; можно вкладывать друг в друга. При этом они по-прежнему остаются самодостаточными. Предполагается, однако, что содержимое внутреннего &lt;article&gt; связано с содержимым внешнего.

Например, если в посте блога содержится цитата из другого поста — она может быть «обёрнута» в свой &lt;article&gt;:

&lt;article&gt; в &lt;section&gt;

Подобным образом несколько тегов &lt;article&gt; можно «обернуть» в &lt;section&gt;.

Например, так можно поступить на странице блога, где отображаются последние сообщения. Контейнером для всех постов будет тег &lt;section&gt;, а каждый такой пост обособляется тегом &lt;article&gt;:

&lt;section&gt; в &lt;article&gt;

Возможен и обратный вариант, когда каждый тег &lt;article&gt; может иметь один или даже несколько тегов &lt;section&gt;.

Например, эта статья, если была бы частью страницы, могла бы быть размечена так:

Вот и всё! Надеемся, эта статья поможет вам безошибочно определять правильное место для каждого структурирующего тега в HTML5.